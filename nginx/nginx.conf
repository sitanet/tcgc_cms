worker_processes 1;

events {
    worker_connections 10000;
}

http {
    # Enable gzip compression for specific response types
    gzip on;
    gzip_proxied any;
    gzip_types text/plain application/json;
    gzip_min_length 1000;

    # Define the upstream server (Django app running via Gunicorn)
    upstream follow_up_project {
        server app:8000;  # The app container should be named 'app' and serve on port 8000
    }

    server {
        listen 80;
        server_name www.tcgcms.sitanetorbit.com tcgcms.sitanetorbit.com;  # Use `_` as a wildcard to catch all hostnames

        # Location block for routing requests to the app server
        location / {
            # Restrict HTTP methods
            if ($request_method !~ ^(GET|POST|HEAD|OPTIONS|PUT|DELETE)$) {
                return 405;
            }

            # Proxy settings to route traffic to Gunicorn
            proxy_pass http://follow_up_project;
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';

            # Prevent caching for WebSocket upgrades
            proxy_cache_bypass $http_upgrade;
        }
    }
}
